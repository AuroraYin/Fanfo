package hibernate;
// Generated 2016-12-13 10:58:38 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Article generated by hbm2java
 */
@Entity
@Table(name = "article", catalog = "db_15")
public class Article implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer artId;
	private User user;
	private String artTitle;
	private String artTitlePic;
	private String artContent;
	private String artAddrProvince;
	private String artAddrCity;
	private Integer artLikesNum;
	private Integer artReadNum;
	private Date artPostTime;
	private Set<ArtComment> artComments = new HashSet<ArtComment>(0);
	private Set<User> users = new HashSet<User>(0);
	private Set<Report> reports = new HashSet<Report>(0);
	private Set<Restaurant> restaurants = new HashSet<Restaurant>(0);

	public Article() {
	}

	public Article(User user, String artTitle, String artTitlePic, String artContent, String artAddrProvince,
			String artAddrCity, Integer artLikesNum, Integer artReadNum, Date artPostTime, Set<ArtComment> artComments,
			Set<User> users, Set<Report> reports, Set<Restaurant> restaurants) {
		this.user = user;
		this.artTitle = artTitle;
		this.artTitlePic = artTitlePic;
		this.artContent = artContent;
		this.artAddrProvince = artAddrProvince;
		this.artAddrCity = artAddrCity;
		this.artLikesNum = artLikesNum;
		this.artReadNum = artReadNum;
		this.artPostTime = artPostTime;
		this.artComments = artComments;
		this.users = users;
		this.reports = reports;
		this.restaurants = restaurants;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "art_id", unique = true, nullable = false)
	public Integer getArtId() {
		return this.artId;
	}

	public void setArtId(Integer artId) {
		this.artId = artId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "art_user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "art_title", length = 30)
	public String getArtTitle() {
		return this.artTitle;
	}

	public void setArtTitle(String artTitle) {
		this.artTitle = artTitle;
	}

	@Column(name = "art_title_pic", length = 100)
	public String getArtTitlePic() {
		return this.artTitlePic;
	}

	public void setArtTitlePic(String artTitlePic) {
		this.artTitlePic = artTitlePic;
	}

	@Column(name = "art_content", length = 65535)
	public String getArtContent() {
		return this.artContent;
	}

	public void setArtContent(String artContent) {
		this.artContent = artContent;
	}

	@Column(name = "art_addr_province", length = 20)
	public String getArtAddrProvince() {
		return this.artAddrProvince;
	}

	public void setArtAddrProvince(String artAddrProvince) {
		this.artAddrProvince = artAddrProvince;
	}

	@Column(name = "art_addr_city", length = 20)
	public String getArtAddrCity() {
		return this.artAddrCity;
	}

	public void setArtAddrCity(String artAddrCity) {
		this.artAddrCity = artAddrCity;
	}

	@Column(name = "art_likes_num")
	public Integer getArtLikesNum() {
		return this.artLikesNum;
	}

	public void setArtLikesNum(Integer artLikesNum) {
		this.artLikesNum = artLikesNum;
	}

	@Column(name = "art_read_num")
	public Integer getArtReadNum() {
		return this.artReadNum;
	}

	public void setArtReadNum(Integer artReadNum) {
		this.artReadNum = artReadNum;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "art_post_time", length = 10)
	public Date getArtPostTime() {
		return this.artPostTime;
	}

	public void setArtPostTime(Date artPostTime) {
		this.artPostTime = artPostTime;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "article")
	public Set<ArtComment> getArtComments() {
		return this.artComments;
	}

	public void setArtComments(Set<ArtComment> artComments) {
		this.artComments = artComments;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@JoinTable(name = "art_like", catalog = "db_15", joinColumns = {
			@JoinColumn(name = "like_art_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "liker_id", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "article")
	public Set<Report> getReports() {
		return this.reports;
	}

	public void setReports(Set<Report> reports) {
		this.reports = reports;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@JoinTable(name = "refer", catalog = "db_15", joinColumns = {
			@JoinColumn(name = "refer_art_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "refer_res_id", nullable = false, updatable = false) })
	public Set<Restaurant> getRestaurants() {
		return this.restaurants;
	}

	public void setRestaurants(Set<Restaurant> restaurants) {
		this.restaurants = restaurants;
	}

}
